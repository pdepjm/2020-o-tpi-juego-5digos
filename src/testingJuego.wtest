import wollok.game.*
import balas.*
import estructuras.*
import movimientos.*
import niveles.*
import objectos.*
import personaje.*
import villano.*

describe "Movimientos del Personaje y colisiones con estructuras NO atravesables" {
	// recordar que personaje inicia en la posicion (1,1)
	test "personaje.ir(carpinchoRickDerecha) mueve al personaje 1 posicion hacia la derecha" {
		nivel1.iniciar()
		personaje.ir(carpinchoRickDerecha)
		assert.equals(game.at(2, 1), personaje.position())
	}
	
	test "personaje.ir(carpinchoRickIzquierda) no cambia la posicion del personaje dado que una pared se lo impide" {
		nivel1.iniciar()
		personaje.ir(carpinchoRickIzquierda)
		assert.equals(game.at(1, 1), personaje.position())
	}
	
	test "personaje.ir(carpinchoRickArriba) mueve al personaje 1 posicion hacia arriba" {
		nivel1.iniciar()
		personaje.ir(carpinchoRickArriba)
		assert.equals(game.at(1, 2), personaje.position())
	}
	
	test "personaje.ir(carpinchoRickAbajo) no cambia la posicion del personaje dado que una pared se lo impide" {
		nivel1.iniciar()
		personaje.ir(carpinchoRickAbajo)
		assert.equals(game.at(1, 1), personaje.position())
	}
}

describe "Colisiones de Balas"{
	
	test "Bala colisiona contra ParedLadrillo o ParedExterior (no son rompibles)" {
		nivel1.iniciar()
		const nuevaPared = new ParedLadrillo(position = game.at(4,1))
		const balaPrueba = new Balas (position = personaje.position(), direccion = personaje.direccion(),danioDeBala=33)
		assert.notThat(balaPrueba.chocasteConObstaculoRompible(nuevaPared))
	}
	
	test "Bala colisiona contra ParedTrucha (son rompibles)" {
		nivel1.iniciar()
		const nuevaPared = new ParedTrucha(position = game.at(4,1))
		const balaPrueba = new Balas (position = personaje.position(), direccion = personaje.direccion(),danioDeBala=33)
		assert.that(balaPrueba.chocasteConObstaculoRompible(nuevaPared))
	}
	
	test "Bala colisiona contra Villano" {
		nivel1.iniciar()
		const villanoPrueba = new Villano (position = game.at(4,1),direccion = [zombieBabosoIzquierda])
		const balaPrueba = new Balas (position = personaje.position(), direccion = personaje.direccion(),danioDeBala=33)
		assert.that(balaPrueba.chocasteConVillano(villanoPrueba))
		
	}
}